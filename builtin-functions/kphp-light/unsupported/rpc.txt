<?php

function rpc_parse ($data) ::: bool;

/** @kphp-extern-func-info generate-stub */
function rpc_clean() ::: bool;
/** @kphp-extern-func-info generate-stub */
function rpc_queue_create ($request_ids ::: mixed = TODO) ::: int;
/** @kphp-extern-func-info generate-stub */
function rpc_queue_empty ($queue_id ::: int) ::: bool;
/** @kphp-extern-func-info generate-stub */
function rpc_queue_next ($queue_id ::: int, $timeout ::: float = -1.0) ::: int | false;
/** @kphp-extern-func-info generate-stub */
function rpc_tl_pending_queries_count () ::: int;

function rpc_tl_query_result_synchronously ($query_ids ::: array) ::: mixed[][];

/** @kphp-extern-func-info generate-stub */
function store_error ($error_code ::: int, $error_text ::: string) ::: bool;
/** @kphp-extern-func-info generate-stub */
function store_int ($v ::: int) ::: bool;
/** @kphp-extern-func-info generate-stub */
function store_long ($v ::: int) ::: bool;
/** @kphp-extern-func-info generate-stub */
function store_string ($v ::: string) ::: bool;
/** @kphp-extern-func-info generate-stub */
function store_finish() ::: bool;

/** @kphp-extern-func-info generate-stub */
function set_fail_rpc_on_int32_overflow ($fail_rpc ::: bool) ::: bool;



/** @kphp-extern-func-info can_throw generate-stub */
function rpc_server_fetch_request() ::: @tl\RpcFunction;
/** @kphp-extern-func-info can_throw generate-stub */
function rpc_server_store_response(@tl\RpcFunctionReturnResult $response) ::: void;


/** @kphp-extern-func-info tl_common_h_dep generate-stub */
function typed_rpc_tl_query_result_synchronously (int[] $query_ids) ::: @tl\RpcResponse[];


/** @kphp-extern-func-info generate-stub can_throw */
function fetch_int () ::: int;
/** @kphp-extern-func-info generate-stub can_throw */
function fetch_long () ::: int;
/** @kphp-extern-func-info generate-stub can_throw */
function fetch_double () ::: float;
/** @kphp-extern-func-info generate-stub can_throw */
function fetch_lookup_int () ::: int;
/** @kphp-extern-func-info generate-stub can_throw */
function fetch_string () ::: string;

/** @kphp-extern-func-info generate-stub */
function new_rpc_connection ($str ::: string, $port ::: int, $actor_id ::: mixed = 0, $timeout ::: float = 0.3, $connect_timeout ::: float = 0.3, $reconnect_timeout ::: float = 17.0) ::: \RpcConnection; // TODO: make actor_id int


/**
 * 'extract_kphp_rpc_response_extra_info' function takes request ID and returns:
 * 1. 'null' in case there is no extra information about the request;
 * 2. 'tuple(response size, response time)' in case we got a response associated with
 *    the request ID.
 */
 /** @kphp-extern-func-info generate-stub */
function extract_kphp_rpc_response_extra_info ($resumable_id ::: int) ::: ?tuple(int, float);


