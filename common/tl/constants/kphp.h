// Compiler for PHP (aka KPHP)
// Copyright (c) 2022 LLC «V Kontakte»
// Distributed under the GPL v3 License, see LICENSE.notice.txt

/* Autogenerated from kphp.tl and left only used constants */
#pragma once

#define                                             TL_KPHP_LEASE_STATS 0x3013ebf4U
#define                                      TL_KPHP_PROCESS_LEASE_TASK 0xa3fdb77cU
#define                                   TL_KPHP_PROCESS_LEASE_TASK_V2 0xa3fdb77dU
#define                                        TL_KPHP_QUEUE_TYPES_MODE 0x93529d44U
#define                                     TL_KPHP_QUEUE_TYPES_MODE_V2 0x93529d45U
#define                                                   TL_KPHP_READY 0x6a34cac7U
#define                                                TL_KPHP_READY_V2 0xfbdb5d27U
#define                                                TL_KPHP_READY_V3 0xfbdb5d28U
#define                                             TL_KPHP_START_LEASE 0x61344739U
#define                                          TL_KPHP_START_LEASE_V2 0x896e46e9U
#define                                              TL_KPHP_STOP_LEASE 0x183bf49dU
#define                                              TL_KPHP_STOP_READY 0x59d86654U
#define                               TL_KPHP_STOP_READY_ACKNOWLEDGMENT 0x4b7503efU

#include <cstdint>
namespace vk {
namespace tl {
namespace kphp {

namespace lease_worker_settings_fields_mask {
constexpr static uint32_t                                        php_timeout = 1U << 0U;
} // namespace lease_worker_settings_fields_mask

namespace queue_types_mode_fields_mask {
constexpr static uint32_t                                           queue_id = 1U << 0U;
} // namespace queue_types_mode_fields_mask

namespace queue_types_mode_v2_fields_mask {
constexpr static uint32_t                                           queue_id = 1U << 0U;
constexpr static uint32_t                                                ALL = 0x00000001;
} // namespace queue_types_mode_v2_fields_mask

namespace ready_v2_fields_mask {
constexpr static uint32_t                                         is_staging = 1U << 0U;
constexpr static uint32_t                                        worker_mode = 1U << 1U;
} // namespace ready_v2_fields_mask

namespace ready_v3_fields_mask {
constexpr static uint32_t                                         is_staging = 1U << 0U;
constexpr static uint32_t                                        worker_mode = 1U << 1U;
constexpr static uint32_t                                                ALL = 0x00000003;
} // namespace ready_v3_fields_mask

namespace start_lease_v2_fields_mask {
constexpr static uint32_t                                           actor_id = 1U << 0U;
constexpr static uint32_t                                                ALL = 0x00000001;
} // namespace start_lease_v2_fields_mask

} // namespace kphp
} // namespace tl
} // namespace vk
