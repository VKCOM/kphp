@ok
<?php

class ExampleProps {
    public $int = 'int';
    public $float = 'float';
    public $double = 'double';
    public $string = 'string';
    public $object = 'object';
    public $void = 'void';
    public $mixed = 'mixed';
    public $bool = 'bool';
    public $tuple = 'tuple';
    public $shape = 'shape';
    public $eval = 'eval';
    public $var_dump = 'var_dump';
    public $define = 'define';
    public $defined = 'defined';
    public $true = 'true';
    public $false = 'false';
    public $null = 'null';
    public $empty = 'empty';
    public $callable = 'callable';
    public $class = 'class';
    public $trait = 'trait';
    public $extends = 'extends';
    public $implements = 'implements';
    public $static = 'static';
    public $abstract = 'abstract';
    public $final = 'final';
    public $public = 'public';
    public $protected = 'protected';
    public $private = 'private';
    public $const = 'const';
    public $enddeclare = 'enddeclare';
    public $endfor = 'endfor';
    public $endforeach = 'endforeach';
    public $endif = 'endif';
    public $endwhile = 'endwhile';
    public $and = 'and';
    public $global = 'global';
    public $goto = 'goto';
    public $instanceof = 'instanceof';
    public $insteadof = 'insteadof';
    public $interface = 'interface';
    public $namespace = 'namespace';
    public $new = 'new';
    public $or = 'or';
    public $xor = 'xor';
    public $try = 'try';
    public $use = 'use';
    public $var = 'var';
    public $exit = 'exit';
    public $list = 'list';
    public $clone = 'clone';
    public $include = 'include';
    public $include_once = 'include_once';
    public $throw = 'throw';
    public $array = 'array';
    public $print = 'print';
    public $echo = 'echo';
    public $require = 'require';
    public $require_once = 'require_once';
    public $return = 'return';
    public $else = 'else';
    public $elseif = 'elseif';
    public $default = 'default';
    public $break = 'break';
    public $continue = 'continue';
    public $switch = 'switch';
    public $yield = 'yield';
    public $function = 'function';
    public $fn = 'fn';
    public $if = 'if';
    public $endswitch = 'endswitch';
    public $finally = 'finally';
    public $for = 'for';
    public $foreach = 'foreach';
    public $declare = 'declare';
    public $case = 'case';
    public $do = 'do';
    public $while = 'while';
    public $as = 'as';
    public $catch = 'catch';
    public $die = 'die';
    public $self = 'self';
    public $parent = 'parent';
    public $isset = 'isset';
    public $unset = 'unset';
}

$obj = new ExampleProps();

var_dump($obj->int);
var_dump($obj->float);
var_dump($obj->double);
var_dump($obj->string);
var_dump($obj->object);
var_dump($obj->void);
var_dump($obj->mixed);
var_dump($obj->bool);
var_dump($obj->tuple);
var_dump($obj->shape);
var_dump($obj->eval);
var_dump($obj->var_dump);
var_dump($obj->define);
var_dump($obj->defined);
var_dump($obj->true);
var_dump($obj->false);
var_dump($obj->null);
var_dump($obj->empty);
var_dump($obj->callable);
var_dump($obj->class);
var_dump($obj->trait);
var_dump($obj->extends);
var_dump($obj->implements);
var_dump($obj->static);
var_dump($obj->abstract);
var_dump($obj->final);
var_dump($obj->public);
var_dump($obj->protected);
var_dump($obj->private);
var_dump($obj->const);
var_dump($obj->enddeclare);
var_dump($obj->endfor);
var_dump($obj->endforeach);
var_dump($obj->endif);
var_dump($obj->endwhile);
var_dump($obj->and);
var_dump($obj->global);
var_dump($obj->goto);
var_dump($obj->instanceof);
var_dump($obj->insteadof);
var_dump($obj->interface);
var_dump($obj->namespace);
var_dump($obj->new);
var_dump($obj->or);
var_dump($obj->xor);
var_dump($obj->try);
var_dump($obj->use);
var_dump($obj->var);
var_dump($obj->exit);
var_dump($obj->list);
var_dump($obj->clone);
var_dump($obj->include);
var_dump($obj->include_once);
var_dump($obj->throw);
var_dump($obj->array);
var_dump($obj->print);
var_dump($obj->echo);
var_dump($obj->require);
var_dump($obj->require_once);
var_dump($obj->return);
var_dump($obj->else);
var_dump($obj->elseif);
var_dump($obj->default);
var_dump($obj->break);
var_dump($obj->continue);
var_dump($obj->switch);
var_dump($obj->yield);
var_dump($obj->function);
var_dump($obj->fn);
var_dump($obj->if);
var_dump($obj->endswitch);
var_dump($obj->finally);
var_dump($obj->for);
var_dump($obj->foreach);
var_dump($obj->declare);
var_dump($obj->case);
var_dump($obj->do);
var_dump($obj->while);
var_dump($obj->as);
var_dump($obj->catch);
var_dump($obj->die);
var_dump($obj->self);
var_dump($obj->parent);
var_dump($obj->unset);
var_dump($obj->isset);
