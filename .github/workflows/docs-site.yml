# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  push:
    branches:
      - master

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  DOCS_SITE_BASE_URL: /kphp

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Cache docker image
        uses: actions/cache@v4
        id: docker-image-cache
        with:
          path: docs-build-env.tar
          key: docs-docker-image-cache-${{ hashFiles('.github/workflows/Dockerfile.docs') }}
  
      - name: Build and save docker image
        if: steps.docker-image-cache.outputs.cache-hit != 'true'
        run: |
          docker build -f $GITHUB_WORKSPACE/.github/workflows/Dockerfile.docs $GITHUB_WORKSPACE \
                -t docs-build-img \
                --cache-from=type=local,src=docs-build-img-cache
          docker tag docs-build-img docs-build-img-cache
          docker save docs-build-img-cache -o docs-build-env.tar
          
      - name: Load docker image from cache
        if: steps.docker-image-cache.outputs.cache-hit == 'true'
        run: docker load --input docs-build-env.tar
  
      - name: Start docker container
        run: |
          docker run -dt --name docs-build-container docs-build-img-cache
          docker cp $GITHUB_WORKSPACE/docs docs-build-container:/home/kitten/docs

      - name: Build site with Jekyll
        run: docker exec docs-build-container bash -c 
                "cd /home/kitten/docs && bundle install && bundle exec jekyll build --baseurl ${{env.DOCS_SITE_BASE_URL}} --source /home/kitten/docs --destination /home/kitten/docs/_site --trace"
                
      - name: Prepare artifacts
        run: docker cp docs-build-container:/home/kitten/docs/_site $GITHUB_WORKSPACE/ && tree $GITHUB_WORKSPACE/_site
 
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./_site

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
